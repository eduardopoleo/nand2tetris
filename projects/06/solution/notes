1) Clean up
First pass:
  Remove empty lines
  Remove blank spaces
  Remove comments (line and inline)

Second pass:
  Replaces symbols by addresses

=> Clean temp.hack file
TEST CASES:
Output of these files
- Add.asm
- Max.asm

2) Parser
Identify instruction type
If @ is present
  replace by only digit
else is C
  Break it down into 3:
    MD=D+1;JGT

  Destination: MD
  Operation: D+1 
  Jump: JGT

=> Array with instructions

TEST CASES:
@5
D=M
AM=M+1
D=D-A
D=D-A;GTL
0;JMP

3) Code
- Runs through each array and translates line by line
  if line has only a number
    - 0 + binary representation of the number
  else
    - 1 + compare against the symbols table

=> binary
TEST CASES
Same as before but in array format to their corresponding binary representation

4) Main goes through every line again and creates a file
-> writes file to final .hack



